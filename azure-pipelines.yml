# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

### YamlMime:Yaml
trigger:
- '*'
variables:
  buildConfiguration: Release
  dotnetSdkVersion: 5.x
stages:
- stage: Build
  displayName: Build the web application
  jobs:
  - job: Build
    displayName: Build job
    pool:
      vmImage: ubuntu-20.04
    variables:
      dotnetSdkVersion: 5.x
    steps:
    - task: UseDotNet@2
      displayName: Use .NET SDK $(dotnetSdkVersion)
      inputs:
        version: $(dotnetSdkVersion)
    - task: DotNetCoreCLI@2
      displayName: Restore project dependencies
      inputs:
        command: restore
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: Build the project - $(buildConfiguration)
      inputs:
        command: build
        arguments: --no-restore --configuration $(buildConfiguration)
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: Publish the project - $(buildConfiguration)
      inputs:
        command: publish
        projects: $(System.DefaultWorkingDirectory)/**/Tailspin.SpaceGame.Web.csproj
        publishWebProjects: false
        arguments: --no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)
        zipAfterPublish: true
    - publish: $(Build.ArtifactStagingDirectory)
      artifact: drop
- stage: Dev
  displayName: Deploy to the dev environment
  dependsOn: Build
  jobs:
  - deployment: Deploy
    pool:
      vmImage: ubuntu-20.04
    environment: Dev
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: DataBase-Azure
              appName: $(DataBase_Dev)
              package: $(Pipeline.Workspace)/drop/$(buildConfiguration)/DataBase_API.zip
- stage: Test
  displayName: Deploy to the test environment
  dependsOn: Dev
  jobs:
  - deployment: Deploy
    pool:
      vmImage: ubuntu-20.04
    environment: Test
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: DataBase-Azure
              appName: $(DataBase_Devlops)
              package: $(Pipeline.Workspace)/drop/$(buildConfiguration)/DataBase_API.zip